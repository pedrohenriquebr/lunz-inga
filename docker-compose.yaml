version: '3.8'

volumes:
  db_volume:
  grafana_data:
  influxdb_data:

networks:
  monitoring:
  k6:

services:
  api:
    image: luzinga-api
    build:
      context: ./backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 80:80
  db:
    image: luzinga-mssql
    container_name: db
    build:
      context: ./.docker/db
    ports:
      - "1433:1433"
    restart: always
    volumes:
      - /var/lib/redis:/data
    networks:
      - monitoring
    healthcheck:
        test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $$SA_PASSWORD -Q 'SELECT 1' || exit 1"]
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s
  redis:
    image: redis:latest
    volumes:
      - redis_volume
    ports:
      - "6379:6379"
    restart: always
    env_file:
      - .env
    command: ["redis-server","--save",
                              "60",
                              "1",
                              "--loglevel",
                              "warning",
                              "--requirepass",
                              "$REDIS_PASSWORD"]
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3100:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-influxdb-flux-datasource
      - GF_APP_MODE=development
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - monitoring
    restart: always

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    environment:
      - INFLUXDB_0_DB=k6
      - INFLUXDB_1_DB=telegraf
    ports:
      - 8086:8086
      - 8083:8083
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring
      - k6
    restart: always
  telegraf:
    container_name: telegraf
    image: telegraf:1.18
    networks:
      - monitoring
    volumes:
      - ./configs/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    restart: always
  k6:
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./examples:/scripts
